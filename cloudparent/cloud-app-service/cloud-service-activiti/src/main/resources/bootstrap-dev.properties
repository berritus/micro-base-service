server.port=8111
#配置中心的servieId，即服务名
spring.cloud.config.discovery.service-id=cloud-config
spring.cloud.config.username=berritus
spring.cloud.config.password=lovesnow
#是从配置中心读取文件
spring.cloud.config.discovery.enabled=true
#从指定配置中心获取配置
#spring.cloud.config.uri=http://localhost:8091
#如果服务无法连接到配置服务器，则可能希望启动服务失败
spring.cloud.config.fail-fast=true
spring.cloud.config.profile=dev
spring.cloud.config.label=conf
spring.cloud.bus.trace.enabled=true
management.server.ssl.enabled=false
#eureka
eureka.client.service-url.defaultZone=http://berritus:lovesnow@localhost:8090/eureka/
##mysql
spring.boot.database=mysql
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/sys?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.datasource.url=jdbc:mysql://192.168.0.103:3306/activiti?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=lovesnow
spring.datasource.initialSize=20
spring.datasource.minIdle=30
spring.datasource.maxActive=50
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQueryTimeout=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#activiti
spring.activiti.database-schema-update=true
spring.activiti.history-level=full
spring.activiti.db-history-used=true
spring.activiti.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.activiti.datasource.jdbc-url=jdbc:mysql://192.168.0.103:3306/activiti?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.activiti.datasource.username=root
spring.activiti.datasource.password=lovesnow
#security
#security.oauth2.client.client-id=product-server
#security.oauth2.client.client-secret=q123456
#security.oauth2.client.access-token-uri=http://localhost:5001/mis/oauth/token
#security.oauth2.client.grant-type=client_credentials,password
#security.oauth2.client.scope=server
#security.oauth2.resource.id=product-server
#security.oauth2.resource.userInfoUri=http://localhost:5001/mis/auth/current
#security.oauth2.resource.preferTokenInfo=false
#security.oauth2.resource.tokenInfoUri=http://localhost:5001/oauth/check_token
#security.oauth2.client.resource.user-info-uri=http://localhost:5001/auth/current
#连接超时时间 java.net.HttpURLConnection#getConnectTimeout()，如果使用Hystrix，该配置无效
#feign.client.config.cloud-uaa.connect-timeout=20000
#读取超时时间  java.net.HttpURLConnection#getReadTimeout()，如果使用Hystrix，该配置无效
#feign.client.config.cloud-uaa.read-timeout=20000
#feign.httpclient.connection-timeout=20000
#开启Hystrix功能
feign.hystrix.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
hystrix.threadpool.cloud-uaa.coreSize=10
hystrix.threadpool.default.coreSize=20
#hystrix.metrics.polling-interval-ms=200000
#zipkin
spring.sleuth.sampler.probability=1.0
spring.zipkin.base-url=http://localhost:9411
#使用RabbitMQ传输链路数据
#spring.zipkin.sender.type=rabbit
#支持通过服务发现来定位host name
#spring.zipkin.locator.discovery.enabled=true
##rabbitmq
spring.rabbitmq.host=192.168.0.103
spring.rabbitmq.port=5672
spring.rabbitmq.username=berritus
spring.rabbitmq.password=lovesnow
#choose logger file
logging.config=classpath:logback_dev.xml
#########mybatis
#mybatis表实体类别名扫描
mybatis.type-aliases-package=mis.berritus.cloud.bean
#mybatis映射文件扫描
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
###################mybatis打印sql
logging.level.mis.berritus.cloud.service.cust.dao=debug