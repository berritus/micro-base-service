server.port=8105
eureka.client.service-url.defaultZone=http://berritus:lovesnow@localhost:8090/eureka/
eureka.instance.instance-id=custService:${random.int[10000,19999]}
#注册到Eureka Server上的是IP
#eureka.instance.prefer-ip-address=true
#配置中心的servieId，即服务名
spring.cloud.config.discovery.service-id=cloud-config
spring.cloud.config.username=berritus
spring.cloud.config.password=lovesnow
#是从配置中心读取文件
spring.cloud.config.discovery.enabled=true
#从指定配置中心获取配置
#spring.cloud.config.uri=http://localhost:8091
#如果服务无法连接到配置服务器，则可能希望启动服务失败
spring.cloud.config.fail-fast=true
spring.cloud.config.profile=dev
spring.cloud.config.label=conf
spring.cloud.bus.trace.enabled=true
management.server.ssl.enabled=false
######################dm
spring.datasource.driver-class-name=dm.jdbc.driver.DmDriver
spring.datasource.driverClassName=dm.jdbc.driver.DmDriver
spring.datasource.url=jdbc:dm://localhost:5236/DMSERVER
spring.datasource.username=SYSDBA
spring.datasource.password=lovesnow@
spring.datasource.initialSize=20
spring.datasource.minIdle=30
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
